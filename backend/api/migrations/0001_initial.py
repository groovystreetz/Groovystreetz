# Generated by Django 5.2.4 on 2025-09-18 18:18

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Banner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("subtitle", models.CharField(blank=True, max_length=300)),
                ("image", models.ImageField(upload_to="banners/")),
                (
                    "banner_type",
                    models.CharField(
                        choices=[
                            ("hero", "Hero Banner"),
                            ("promotion", "Promotional Banner"),
                            ("category", "Category Banner"),
                        ],
                        default="promotion",
                        max_length=20,
                    ),
                ),
                (
                    "link_url",
                    models.URLField(blank=True, help_text="Optional link for banner"),
                ),
                (
                    "link_text",
                    models.CharField(
                        blank=True, help_text="Button text", max_length=50
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("customer", "Customer"),
                            ("admin", "Admin"),
                            ("superadmin", "SuperAdmin"),
                        ],
                        default="customer",
                        max_length=15,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address_line_1", models.CharField(max_length=255)),
                (
                    "address_line_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=100)),
                ("is_default", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Addresses",
            },
        ),
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "subject",
                    models.CharField(
                        choices=[
                            ("general", "General Inquiry"),
                            ("order", "Order Issue"),
                            ("product", "Product Question"),
                            ("shipping", "Shipping Issue"),
                            ("return", "Return/Refund"),
                            ("technical", "Technical Support"),
                            ("other", "Other"),
                        ],
                        default="general",
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("is_resolved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique coupon code", max_length=50, unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for the coupon", max_length=100
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Description of the coupon"),
                ),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("percentage", "Percentage Discount"),
                            ("fixed", "Fixed Amount Discount"),
                            ("free_shipping", "Free Shipping"),
                            ("buy_x_get_y", "Buy X Get Y Free"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "discount_value",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount or percentage value",
                        max_digits=10,
                    ),
                ),
                (
                    "minimum_order_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Minimum order total required",
                        max_digits=10,
                    ),
                ),
                (
                    "max_uses_total",
                    models.IntegerField(
                        blank=True,
                        help_text="Total usage limit across all users",
                        null=True,
                    ),
                ),
                (
                    "max_uses_per_user",
                    models.IntegerField(default=1, help_text="Usage limit per user"),
                ),
                (
                    "valid_from",
                    models.DateTimeField(help_text="When the coupon becomes active"),
                ),
                (
                    "valid_until",
                    models.DateTimeField(help_text="When the coupon expires"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Enable/disable coupon"
                    ),
                ),
                (
                    "no_return_policy",
                    models.BooleanField(
                        default=False,
                        help_text="Orders with this coupon cannot be returned",
                    ),
                ),
                (
                    "allow_stacking",
                    models.BooleanField(
                        default=False, help_text="Allow with other coupons"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Applicable categories (empty = all)",
                        to="api.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_coupons",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_restrictions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific users (empty = all users)",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Design",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="designs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "original_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Price before any discounts",
                        max_digits=10,
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total discount applied",
                        max_digits=10,
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Final price after discounts",
                        max_digits=10,
                    ),
                ),
                (
                    "no_return_allowed",
                    models.BooleanField(
                        default=False, help_text="Return policy restriction from coupon"
                    ),
                ),
                ("shipping_address", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tracking_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "shiprocket_order_id",
                    models.CharField(
                        blank=True,
                        help_text="ShipRocket order ID",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "awb_code",
                    models.CharField(
                        blank=True,
                        help_text="Airway Bill number from ShipRocket",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "courier_company_id",
                    models.CharField(
                        blank=True,
                        help_text="Courier company ID from ShipRocket",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "courier_company_name",
                    models.CharField(
                        blank=True,
                        help_text="Courier company name",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "shipment_id",
                    models.CharField(
                        blank=True,
                        help_text="ShipRocket shipment ID",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "shipment_pickup_token",
                    models.CharField(
                        blank=True,
                        help_text="Pickup token for shipment",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "shiprocket_status",
                    models.CharField(
                        blank=True,
                        help_text="Current status from ShipRocket",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "estimated_delivery_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Estimated delivery date from courier",
                        null=True,
                    ),
                ),
                (
                    "shipped_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date when shipment was picked up",
                        null=True,
                    ),
                ),
                (
                    "delivered_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date when shipment was delivered",
                        null=True,
                    ),
                ),
                (
                    "shipping_charges",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Actual shipping charges from courier",
                        max_digits=10,
                    ),
                ),
                (
                    "is_shiprocket_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to use ShipRocket for this order",
                    ),
                ),
                (
                    "applied_coupon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to="api.coupon",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("codename", models.CharField(max_length=50, unique=True)),
                (
                    "permission_type",
                    models.CharField(
                        choices=[
                            ("read", "Read Access"),
                            ("write", "Write Access"),
                            ("delete", "Delete Access"),
                            ("manage", "Full Management Access"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("users", "User Management"),
                            ("products", "Product Management"),
                            ("orders", "Order Management"),
                            ("coupons", "Coupon Management"),
                            ("reviews", "Review Management"),
                            ("testimonials", "Testimonial Management"),
                            ("contacts", "Contact Management"),
                            ("banners", "Banner Management"),
                            ("spotlights", "Spotlight Management"),
                            ("rewards", "Reward Points Management"),
                            ("analytics", "Analytics & Reports"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["resource_type", "permission_type"],
                "unique_together": {("permission_type", "resource_type")},
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="products/"),
                ),
                ("stock", models.PositiveIntegerField(default=0)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("unisex", "Unisex"),
                        ],
                        default="unisex",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="api.category",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="coupon",
            name="products",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific products (empty = all)",
                to="api.product",
            ),
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("xs", "XS"),
                            ("s", "S"),
                            ("m", "M"),
                            ("l", "L"),
                            ("xl", "XL"),
                            ("xxl", "XXL"),
                            ("xxxl", "XXXL"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("red", "Red"),
                            ("blue", "Blue"),
                            ("green", "Green"),
                            ("black", "Black"),
                            ("white", "White"),
                            ("yellow", "Yellow"),
                            ("pink", "Pink"),
                            ("purple", "Purple"),
                            ("orange", "Orange"),
                            ("gray", "Gray"),
                            ("brown", "Brown"),
                            ("navy", "Navy"),
                            ("maroon", "Maroon"),
                            ("olive", "Olive"),
                            ("turquoise", "Turquoise"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Stock Keeping Unit", max_length=50, unique=True
                    ),
                ),
                (
                    "price_modifier",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Price difference from base product",
                        max_digits=8,
                    ),
                ),
                ("stock", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="api.product",
                    ),
                ),
            ],
            options={
                "unique_together": {("product", "size", "color")},
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="products/gallery/")),
                ("alt_text", models.CharField(blank=True, max_length=200)),
                ("is_primary", models.BooleanField(default=False)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="api.product",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="api.productvariant",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="api.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="api.product",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="api.productvariant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RewardPoints",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_points", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reward_points",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RewardTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("earn", "Earned Points"),
                            ("redeem", "Redeemed Points"),
                            ("expire", "Expired Points"),
                            ("bonus", "Bonus Points"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "points",
                    models.IntegerField(
                        help_text="Positive for earning, negative for spending"
                    ),
                ),
                ("description", models.CharField(max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.order",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reward_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_system_role",
                    models.BooleanField(
                        default=False, help_text="System roles cannot be deleted"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True, related_name="roles", to="api.permission"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Spotlight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "spotlight_type",
                    models.CharField(
                        choices=[
                            ("product", "Product"),
                            ("category", "Category"),
                            ("collection", "Collection"),
                        ],
                        max_length=20,
                    ),
                ),
                ("image", models.ImageField(blank=True, upload_to="spotlight/")),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.category",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.product",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Testimonial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(help_text="Testimonial content")),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        help_text="Rating from 1 to 5",
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(
                        default=False, help_text="Admin approval status"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, help_text="Feature on homepage"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="testimonials",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Wishlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        blank=True, related_name="wishlists", to="api.product"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wishlist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CouponUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("used_at", models.DateTimeField(auto_now_add=True)),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Actual discount amount applied",
                        max_digits=10,
                    ),
                ),
                (
                    "original_order_value",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Order value before discount",
                        max_digits=10,
                    ),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coupon_usages",
                        to="api.coupon",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coupon_usages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coupon_usage",
                        to="api.order",
                    ),
                ),
            ],
            options={
                "ordering": ["-used_at"],
                "unique_together": {("coupon", "order")},
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("comment", models.TextField()),
                ("is_verified_purchase", models.BooleanField(default=False)),
                ("is_approved", models.BooleanField(default=True)),
                ("helpful_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="api.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("product", "user")},
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="role_assignments_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_assignments",
                        to="api.role",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "role")},
            },
        ),
    ]
